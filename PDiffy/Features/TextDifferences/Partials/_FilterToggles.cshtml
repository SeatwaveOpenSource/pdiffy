@model IList<PDiffy.Features.TextDifferences.Index.Model>

<div class="fixed-toggles">
	<aside class="toggles">
		@{
			var sites = Model.GroupBy(_ => _.Site);
			var pages = Model.GroupBy(_ => _.Page);

			if (Model.Count > 0)
			{
				<span>@Model.Count items compared over @sites.Count() sites and @pages.Count() pages.</span>
			}
			else
			{
				<span>No text comparisons available.</span>
			}
		}
	</aside>

	<aside class="toggles">
		<div>
			<input id="OnlyDifferences" type="radio" name="highLevelFilter" value="" checked>
			<label for="OnlyDifferences">Only Differences</label>
		</div>
		<div>
			<input id="OnlySimilarities" type="radio" name="highLevelFilter" value="">
			<label for="OnlySimilarities">Only Similarities (why?)</label>
		</div>
		<div>
			<input id="ShowEverything" type="radio" name="highLevelFilter" value="">
			<label for="ShowEverything">Show everything</label>
		</div>
	</aside>

	<aside class="toggles">
		@foreach (var site in sites)
		{
			<div>
				<input id="@site.Key.Replace(" ","__")" toggles="site" type="checkbox" class="input-toggle" />
				<label for="@site.Key.Replace(" ", "__")">@string.Format("{0} ({1})", site.Key, @Model.Count(_ => _.Site == site.Key))</label>
			</div>
		}
	</aside>

	<aside class="toggles">

		@foreach (var page in pages)
		{
			<div>
				<input id="cmn-toggle-@page.Key.Replace(" ", "__")" toggles="page" type="checkbox" class="input-toggle" />
				<label for="cmn-toggle-@page.Key.Replace(" ", "__")">@string.Format("{0} ({1})", page.Key, @Model.Count(_ => _.Page == page.Key))</label>
			</div>
		}
	</aside>

</div>